<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>